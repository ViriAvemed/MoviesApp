{"version":3,"sources":["utils/localStorage.js","reducers/counter.js","reducers/index.js","store.js","components/Navbar/NavBar.js","components/Carousel/Carousel.js","hooks/fetch.js","utils/constants.js","components/Footer/Footer.js","pages/home.js","components/MovieCatalog/MovieCatalog.js","components/Pagination/Pagination.js","pages/new-movies.js","pages/best-movies.js","pages/Search/Search.js","actions/index.js","actions/counterActions.js","pages/movie/movie.js","pages/my-movies.js","pages/error404.js","App.js","serviceWorker.js","index.js"],"names":["getStateLocalStorage","favMovies","moviesStorage","localStorage","getItem","JSON","parse","setStateLocalStorage","empty","length","console","log","setItem","stringify","counter","state","action","data","type","push","state2","filter","r","title","rootReducer","combineReducers","localStorageState","store","createStore","window","_REDUX_DEVTOOLS_EXTENSION_","subscribe","getState","NavBar","Row","Col","Navbar","collapseOnSelect","expand","className","Brand","src","alt","Toggle","aria-controls","Collapse","id","Nav","to","Movie","props","movie","backdrop_path","backdropPath","style","height","width","Caption","Button","variant","CarouselMovies","movies","loading","result","Spinner","animation","results","map","Item","key","useFetch","url","options","useState","setLoading","setResult","error","setError","useEffect","a","async","fetch","res","json","URL_API","API","Footer","Home","newMovies","Container","fluid","MovieCard","poster_path","overview","posterPath","Card","Img","Body","Title","Text","MovieCatalog","PaginationMovies","currentPage","totalItems","onChangePage","current","total","pageSize","onChange","NewMovies","movieList","setMovieList","page","setPage","response","marginTop","CardColumns","padding","total_results","BestMovies","withRouter","location","history","searchValue","setSearchValue","queryString","search","s","paddingTop","InputGroup","size","FormControl","e","urlParams","target","value","decodeURIComponent","replace","placeholder","aria-label","aria-describedby","Append","allActions","counterActions","addMovie","deleteMovie","name","RenderMovie","movieInfo","backgroundImage","md","span","image","PosterMovie","MovieInfo","release_date","genres","vote_average","original_language","runtime","revenue","budget","dispatch","useDispatch","onClick","genre","useParams","MisMovies","useSelector","fromStorage","bg","text","marginLeft","Header","Error404","App","path","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"waACaA,EAAuB,SAACC,GACjC,IAAMC,EAAgBC,aAAaC,QAAQ,aAC3C,OAAsB,OAAlBF,EACOD,EAEAI,KAAKC,MAAMJ,IAKbK,EAAuB,SAACN,EAAUO,IACxCP,EAAUQ,OAAO,GAAKD,KACrBE,QAAQC,IAAIV,GACZE,aAAaS,QAAQ,YAAaP,KAAKQ,UAAUZ,MCa1Ca,EAzBC,WAA0B,IAAzBC,EAAwB,uDAAhB,GAAKC,EAAW,uCACrC,IAAIA,EAAOC,KAoBP,OAAOF,EAnBP,OAAOC,EAAOE,MACV,IAAK,YAGD,OAFAH,EAAMI,KAAKH,EAAOC,MAClBV,EAAqBQ,GACdA,EACX,IAAK,eACD,IAAIP,GAAM,EACNY,EAASL,EAAMM,QAAQ,SAACC,GACxB,OAAOA,EAAEC,QAAUP,EAAOC,QAM9B,OAJAP,QAAQC,IAAIS,GAEOZ,EAAH,KADhBO,EAAMK,GACCX,OACPF,EAAqBQ,EAAMP,GACpBO,EACX,QACI,OAAOA,ICZRS,EAJKC,YAAgB,CAChCX,YCAEY,EAAoB1B,IACpB2B,EAAQC,YACVJ,EACAE,EACAG,OAAOC,4BAA8BD,OAAOC,8BAGhDH,EAAMI,WAAU,WACZxB,EAAqB,CACjBQ,MAAOY,EAAMK,WAAWjB,WAGhBY,Q,0CCeDM,EA3BA,WACX,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,UAAU,WAC3C,kBAACH,EAAA,EAAOI,MAAR,KACI,yBAAKC,IAAI,2BAA2BC,IAAI,GAAGH,UAAU,kBAEzD,kBAACH,EAAA,EAAOI,MAAR,CAAcD,UAAU,aAAY,0CACpC,kBAACH,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,mBAAmBP,UAAU,iBAC7C,kBAACQ,EAAA,EAAD,CAAKR,UAAU,WACX,kBAAC,IAAD,CAAMS,GAAG,KAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,eAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,cAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,gB,oCCWtBC,EAAO,SAACC,GAAU,IAAD,EAGfA,EADAC,MAAQL,EAFO,EAEPA,GAAIM,EAFG,EAEHA,cAAe7B,EAFZ,EAEYA,MAGzB8B,EAAY,4CAAwCD,GAE1D,OACI,6BACI,yBAAKE,MAAO,CAACC,OAAO,QAASC,MAAM,SAC9BjB,UAAU,UACVE,IAAG,UAAKY,GACRX,IAAI,KAET,kBAAC,IAASe,QAAV,CAAkBlB,UAAU,oBACxB,gCAAMhB,EAAN,KACA,kBAAC,IAAD,CAAMyB,GAAE,iBAAYF,IAChB,kBAACY,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,kBAQLC,EAlDQ,SAACV,GAAW,IACxBW,EAAUX,EAAVW,OACP,GAAGA,EAAOC,UAAYD,EAAOE,OACzB,OAAO,kBAACC,EAAA,EAAD,CAASC,UAAU,SAHA,IAMtBC,EAAYL,EAAOE,OAAnBG,QAER,OACI,kBAAC/B,EAAA,EAAD,CAAKI,UAAU,WACX,kBAACL,EAAA,EAAD,CAAKK,UAAU,WACX,kBAACJ,EAAA,EAAD,CAAKI,UAAU,yCACX,kBAAC,IAAD,CAAWA,UAAU,2BAChB2B,EAAQC,KAAI,SAAAhB,GAAK,OACd,kBAAC,IAASiB,KAAV,CAAe7B,UAAU,UAAU8B,IAAKlB,EAAML,IAC1C,kBAAC,EAAD,CAAQK,MAAOA,a,wBCGhCmB,EAvBE,SAACC,EAAKC,GAAa,IAAD,EACDC,oBAAS,GADR,mBACxBX,EADwB,KACfY,EADe,OAEHD,mBAAS,MAFN,mBAExBV,EAFwB,KAEhBY,EAFgB,OAGLF,mBAAS,MAHJ,mBAGxBG,EAHwB,KAGjBC,EAHiB,KAmB/B,OAdAC,qBAAU,YACN,WAAC,UAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEyBE,MAAMV,EAAKC,IAFpC,cAEaU,EAFb,kBAAAH,EAAA,MAG0BG,EAAIC,QAH9B,OAGaA,EAHb,OAIOR,EAAUQ,GACVT,GAAW,GALlB,kDAOOG,EAAS,EAAD,IACRH,GAAW,GARlB,yDAAD,KAWD,CAACF,EAASD,IAEN,CAAET,UAASC,SAAQa,UCrBjBQ,EAAU,+BACVC,EAAM,mCCcJC,G,OAXA,WACZ,OACG,kBAACpD,EAAA,EAAD,CAAKK,UAAU,cACX,kBAACJ,EAAA,EAAD,CAAKI,UAAU,6DACX,0ECoBCgD,EApBF,WACT,IAAMC,EAAYlB,EAAS,GAAD,OAAIc,EAAJ,sCAAyCC,EAAzC,2BAE1B,OACI,kBAACI,EAAA,EAAD,CAAWC,OAAO,EAAMnD,UAAU,WAC9B,kBAACL,EAAA,EAAD,CAAKK,UAAU,WACX,kBAACJ,EAAA,EAAD,CAAKI,UAAU,WACX,kBAAC,EAAD,CAAgBsB,OAAQ2B,EAAWjD,UAAU,cAGrD,kBAACL,EAAA,EAAD,CAAKK,UAAU,cACX,kBAAC,EAAD,S,2BCIVoD,EAAW,SAACzC,GAAW,IAAD,EAC8BA,EAA9CC,MAAQL,EADQ,EACRA,GAAIvB,EADI,EACJA,MAAOqE,EADH,EACGA,YAAaC,EADhB,EACgBA,SAClCC,EAAU,4CAAuCF,GAEvD,OACI,kBAAC,IAAD,CAAM5C,GAAE,iBAAYF,IACnB,kBAACiD,EAAA,EAAD,CACAxD,UAAU,cACH,kBAACwD,EAAA,EAAKC,IAAN,CAAUrC,QAAQ,MAAMlB,IAAKqD,IAC7B,kBAACC,EAAA,EAAKE,KAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,KAAa3E,GACb,kBAACwE,EAAA,EAAKI,KAAN,KACKN,OASVO,EAtCK,SAAClD,GAMjB,OAFIA,EADAW,OAASK,QAGEC,KAAM,SAAAhB,GAAK,OACtB,kBAAChB,EAAA,EAAD,CAAKkC,IAAKlB,EAAML,IACZ,kBAAC,EAAD,CAAWK,MAAOA,S,QCGfkD,G,OAbS,SAACnD,GAAU,IACvBoD,EAAyCpD,EAAzCoD,YAAaC,EAA4BrD,EAA5BqD,WAAYC,EAAgBtD,EAAhBsD,aACjC,OACI,kBAAC,IAAD,CACIjE,UAAU,aACVkE,QAAWH,EACXI,MAAOH,EACPI,SAAW,GACXC,SAAUJ,MCgDPK,EArDG,WAAO,IAAD,EAEcpC,mBAAS,IAFvB,mBAEbqC,EAFa,KAEFC,EAFE,OAGItC,mBAAS,GAHb,mBAGbuC,EAHa,KAGPC,EAHO,KAKpBnC,qBAAW,YACP,WAAC,UAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC0BE,MAAM,GAAD,OACrBG,EADqB,sCACgBC,EADhB,gCAC2C2B,KAF1E,cACSE,EADT,kBAAAnC,EAAA,MAKwBmC,EAAS/B,QALjC,OAKStB,EALT,OAMGkD,EAAalD,GANhB,qCAAD,KAQF,CAACmD,IAMH,OACI,kBAAC9E,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAKK,UAAU,SACX,kBAACJ,EAAA,EAAD,CAAKI,UAAU,iCACX,wBAAIA,UAAU,sBAAsBe,MAAQ,CAAE6D,UAAW,QAAzD,yBAKR,kBAACC,EAAA,EAAD,CAAa9D,MAAO,CAACE,MAAM,QAAS6D,QAAQ,UACvCP,EAAU5C,QACP,kBAAC,EAAD,CAAcL,OAAQiD,IAEtB,kBAAC3E,EAAA,EAAD,KACI,kBAAC6B,EAAA,EAAD,CAASC,UAAU,WAK/B,kBAAC/B,EAAA,EAAD,CAAKK,UAAU,aACX,kBAACJ,EAAA,EAAD,CAAKI,UAAU,iCACX,kBAAC,EAAD,CACIA,UAAU,aACV+D,YAAaQ,EAAUE,KACvBT,WAAYO,EAAUQ,cACtBd,aA7BC,SAAAQ,GAAI,OACrBC,EAAQD,QA+BJ,kBAAC,EAAD,QCGGO,EAnDI,WAAO,IAAD,EACa9C,mBAAS,IADtB,mBACdqC,EADc,KACHC,EADG,OAEGtC,mBAAS,GAFZ,mBAEduC,EAFc,KAERC,EAFQ,KAIrBnC,qBAAW,YACP,WAAC,UAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC0BE,MAAM,GAAD,OACrBG,EADqB,kCACYC,EADZ,gCACuC2B,KAFtE,cACSE,EADT,kBAAAnC,EAAA,MAKwBmC,EAAS/B,QALjC,OAKStB,EALT,OAMGkD,EAAalD,GANhB,qCAAD,KAQF,CAACmD,IAMH,OACI,kBAAC9E,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAKK,UAAU,SACX,kBAACJ,EAAA,EAAD,CAAKI,UAAU,iCACX,wBAAIA,UAAU,sBAAsBe,MAAQ,CAAE6D,UAAW,QAAzD,4BAKR,kBAACC,EAAA,EAAD,CAAa9D,MAAO,CAACE,MAAM,QAAS6D,QAAQ,UACvCP,EAAU5C,QACP,kBAAC,EAAD,CAAcL,OAAQiD,IAEtB,kBAAC3E,EAAA,EAAD,CAAKI,UAAU,iCACX,kBAACyB,EAAA,EAAD,CAASC,UAAU,WAI/B,kBAAC/B,EAAA,EAAD,CAAKK,UAAU,aACX,kBAACJ,EAAA,EAAD,CAAKI,UAAU,iCACX,kBAAC,EAAD,CACIA,UAAU,aACV+D,YAAaQ,EAAUE,KACvBT,WAAYO,EAAUQ,cACtBd,aA5BC,SAAAQ,GAAI,OACrBC,EAAQD,QA8BJ,kBAAC,EAAD,Q,4CCYGQ,eAzDF,SAACtE,GAAW,IACduE,EAAsBvE,EAAtBuE,SAAUC,EAAYxE,EAAZwE,QADG,EAEcjD,mBAAS,IAFvB,mBAEbqC,EAFa,KAEFC,EAFE,OAGkBtC,mBAAS,IAH3B,mBAGbkD,EAHa,KAGAC,EAHA,KAKpB9C,qBAAU,YACN,WAAC,cAAAC,EAAAC,OAAA,uDAES2C,EAAcE,IAAYvH,MAAMmH,EAASK,QACxCC,EAAKJ,EAAY,MAH3B,WAAA5C,EAAA,MAI0BE,MAAM,GAAD,OACrBG,EADqB,iCACWC,EADX,iCACuC0C,EADvC,aAJ/B,cAISb,EAJT,kBAAAnC,EAAA,MAOwBmC,EAAS/B,QAPjC,OAOStB,EAPT,OAQG+D,EAAeG,GACfhB,EAAalD,GAThB,sCAAD,KAYD,CAAC4D,EAASK,SAUb,OACI,kBAAC5F,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKI,UAAU,SAASe,MAAO,CAAE0E,WAAW,OACxC,wBAAIzF,UAAU,4BAAd,4BACA,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKI,UAAU,iCACX,kBAAC0F,EAAA,EAAD,CAAY1F,UAAU,8BAA8B2F,KAAK,MACrD,kBAACC,EAAA,EAAD,CAAavB,SAfd,SAAAwB,GACnB,IAAIC,EAAYR,IAAYvH,MAAMmH,EAASK,QAC3CO,EAAS,EAAQD,EAAEE,OAAOC,aACnBF,EAAU,MACjBX,EAAQvG,KAAR,WAAiBqH,mBAAmBX,IAAYhH,UAAUwH,IAAYI,QAAQ,IAAI,MAClFb,EAAeQ,EAAEE,OAAOC,QAUmCA,MAAOZ,EACjCe,YAAY,+BACZC,aAAW,uBACXC,mBAAiB,iBAE9B,kBAACX,EAAA,EAAWY,OAAZ,KACI,kBAACnF,EAAA,EAAD,CAAQC,QAAQ,qBAAoB,yBAAKlB,IAAI,4BAA4BC,IAAI,UAM7F,kBAAC0E,EAAA,EAAD,CAAa9D,MAAO,CAAC+D,QAAQ,WACxBP,EAAU5C,SACP,kBAAC,EAAD,CAAcL,OAAQiD,UClD/BgC,G,OALI,CACfC,eCcW,CACXC,SAhBa,SAAC/H,GACd,MAAO,CACHC,KAAM,YACND,KAAMA,IAcVgI,YATgB,SAACC,GACjB,MAAO,CACHhI,KAAM,eACND,KAAMiI,OCYRC,EAAa,SAACjG,GAAU,IAAD,EAGrBA,EADAkG,UAAahG,EAFQ,EAERA,cAAewC,EAFP,EAEOA,YAG1BvC,EAAY,4CAAuCD,GAGzD,OACI,kBAAClB,EAAA,EAAD,CAAKK,UAAU,QAAQe,MAAO,CAAC+F,gBAAgB,QAAD,OAAUhG,EAAV,MAA4BE,OAAO,UAC7E,yBAAKhB,UAAU,aAAae,MAAO,CAAE0E,WAAW,OAC5C,kBAAC9F,EAAA,EAAD,CAAKK,UAAU,cACX,kBAACJ,EAAA,EAAD,CAAKmH,GAAI,CAAEC,KAAK,GAAKhH,UAAU,gBAC3B,kBAAC,EAAD,CAAaiH,MAAO5D,KAExB,kBAACzD,EAAA,EAAD,CAAKmH,GAAI,CAAEC,KAAK,GAAIhH,UAAU,mBAC1B,kBAAC,EAAD,CAAW6G,UAAWlG,EAAMkG,iBAU9CK,EAAY,SAACvG,GAAU,IACjBsG,EAAUtG,EAAVsG,MACF1D,EAAW,qCAAD,OAAuC0D,GACvD,OAAO,yBAAKlG,MAAO,CAAC+F,gBAAgB,QAAD,OAAUvD,EAAV,UAGjC4D,EAAW,SAACxG,GAAU,IAAD,EACkGA,EAAjHkG,UAAaO,EADE,EACFA,aAAc9D,EADZ,EACYA,SAAU+D,EADtB,EACsBA,OAAQrI,EAD9B,EAC8BA,MAAMsI,EADpC,EACoCA,aAAcC,EADlD,EACkDA,kBAAmBC,EADrE,EACqEA,QAASC,EAD9E,EAC8EA,QAASC,EADvF,EACuFA,OAExGC,EAAWC,cAIjB,OACI,kBAACjI,EAAA,EAAD,CAAKK,UAAU,qBACX,kBAACL,EAAA,EAAD,CAAKK,UAAU,QACX,kBAACJ,EAAA,EAAD,KACI,wBAAII,UAAU,QACThB,EAAO,IAAK,IACb,kBAACmC,EAAA,EAAD,CAAQC,QAAQ,kBAAkByG,QAAS,kBAAMF,EAASpB,EAAWC,eAAeC,SAAS,CAAC,MAAQzH,OAAtG,wBAEJ,8BAAOoI,KAGf,kBAACzH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,yBAAKI,UAAU,sBACX,+CAAkBsH,EAAlB,sBAAgDE,EAAhD,+BAAqFD,EAArF,KACA,4CAAkBG,EAAlB,0BAA8CD,GAC9C,0CACA,2BAAInE,GACJ,uCACA,4BAAK+D,EAAOzF,KAAI,SAAAkG,GAAK,OACjB,wBAAIhG,IAAKgG,EAAMvH,IAAKuH,EAAMnB,eAUvCjG,GApFD,WAAO,IAEVH,EAAMwH,cAANxH,GACDsG,EAAY9E,EAAS,GAAD,OACnBc,EADmB,kBACFtC,EADE,oBACYuC,EADZ,oBAK1B,OAAG+D,EAAUtF,UAAYsF,EAAUrF,OACxB,kBAACC,EAAA,EAAD,CAASC,UAAU,SAGvB,kBAAC,EAAD,CAAamF,UAAWA,EAAUrF,UCe9BwG,GA9BG,WACd,IAAML,EAAWC,cACXrJ,EAAU0J,aAAY,SAAAzJ,GAAK,OAAIA,EAAMD,WACvC2J,EAAczK,EAAqBc,GAEvC,OACI,kBAACoB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKI,UAAU,mBACX,wBAAIA,UAAU,sBAAsBe,MAAQ,CAAE6D,UAAW,QAAzD,8BAGA,kBAAChF,EAAA,EAAD,KACMsI,EAAYhK,OAAQ,EAAKgK,EAAYtG,KAAK,SAAChB,GAAD,OACxC,kBAAC4C,EAAA,EAAD,CAAM2E,GAAG,OAAOC,KAAK,QAAQrH,MAAQ,CAAEE,MAAO,MAAOoH,WAAW,OAAUrI,UAAU,OAAQY,MAAOA,GAC/F,kBAAC4C,EAAA,EAAK8E,OAAN,CAAatI,UAAU,+CAClBY,EAAM5B,MACP,kBAACmC,EAAA,EAAD,CAAQC,QAAQ,kBAAmByG,QAAS,kBAAMF,EAASpB,EAAWC,eAAeE,YAAY9F,EAAM5B,UAAvG,UAIR,kBAACY,EAAA,EAAD,KACI,kBAAC6B,EAAA,EAAD,CAASC,UAAU,cCjBhC6G,GARE,WACb,OACI,kBAAC3I,EAAA,EAAD,CAAKI,UAAU,mDAAmDe,MAAO,CAACE,MAAM,QAASD,OAAO,QAAS8D,QAAQ,MAC7G,yBAAK5E,IAAI,gGAAgGC,IAAI,OC8E1GqI,GAxDH,WAGR,OAEI,kBAAC,IAAD,CAAUpJ,MAAOA,GACb,kBAAC8D,EAAA,EAAD,CAAYC,OAAO,GACf,kBAAC,IAAD,KACI,kBAACxD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKI,UAAU,WACX,kBAAC,EAAD,QAKR,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6I,KAAK,IAAIC,OAAO,GACnB,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAOD,KAAK,cAAcC,OAAO,GAC7B,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAOD,KAAK,eAAeC,OAAO,GAC9B,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAO,GAC5B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAO,GACzB,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAO,GAC5B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOD,KAAK,KACR,kBAAC,GAAD,cC3DhBE,QACW,cAA7BrJ,OAAO4F,SAAS0D,UAEe,UAA7BtJ,OAAO4F,SAAS0D,UAEhBtJ,OAAO4F,SAAS0D,SAASC,MACvB,2D,OCPNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4fdabb27.chunk.js","sourcesContent":["// Function to save data in local storage\r\nexport const getStateLocalStorage = (favMovies) => {\r\n    const moviesStorage = localStorage.getItem(\"favMovies\");\r\n    if (moviesStorage === null ) {\r\n        return favMovies;\r\n    } else {\r\n        return JSON.parse(moviesStorage);\r\n    }\r\n};\r\n\r\n// Function for data permanence\r\nexport const setStateLocalStorage = (favMovies,empty) => {\r\n    if(favMovies.length>0 || empty){\r\n        console.log(favMovies);\r\n        localStorage.setItem(\"favMovies\", JSON.stringify(favMovies))\r\n    }\r\n};\r\n\r\n\r\n","import {setStateLocalStorage } from \"../utils/localStorage\";\r\n\r\nconst counter = (state = [] , action) => {\r\n    if (action.data){\r\n        switch(action.type){\r\n            case \"ADD_MOVIE\":\r\n                state.push(action.data);\r\n                setStateLocalStorage(state);\r\n                return state;\r\n            case \"DELETE_MOVIE\":\r\n                let empty=false;\r\n                let state2 = state.filter( (r) => {\r\n                    return r.title !== action.data\r\n                });\r\n                console.log(state2);\r\n                state=state2;\r\n                (state.length===0)?empty=true:empty=false;\r\n                setStateLocalStorage(state,empty);\r\n                return state;\r\n            default:\r\n                return state\r\n        }\r\n    }else {\r\n        return state\r\n    }\r\n};\r\n\r\nexport default counter;\r\n\r\n\r\n\r\n","import counter from './counter'\r\nimport {combineReducers} from 'redux'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    counter,\r\n});\r\n\r\nexport default rootReducer\r\n","import { createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { getStateLocalStorage, setStateLocalStorage } from \"./utils/localStorage\";\r\n\r\n\r\nconst localStorageState = getStateLocalStorage();\r\nconst store = createStore (\r\n    rootReducer,\r\n    localStorageState,\r\n    window._REDUX_DEVTOOLS_EXTENSION_ && window._REDUX_DEVTOOLS_EXTENSION_()\r\n);\r\n\r\nstore.subscribe(()=> {\r\n    setStateLocalStorage({\r\n        state: store.getState().state\r\n    });\r\n});\r\nexport  default store;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport './NavBar.scss';\r\nimport {Navbar, Nav, Col, Row} from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Navbar collapseOnSelect expand=\"lg\" className=\"nav-bar\">\r\n                    <Navbar.Brand >\r\n                        <img src=\"/assets/img/pelicula.png\" alt=\"\" className=\"nav-bar_logo\"/>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Brand className=\"nav-title\"><p>MOVIES APP</p></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"basic-navbar \" >\r\n                        <Nav className=\"mr-auto\">\r\n                            <Link to=\"/\">INICIO</Link>\r\n                            <Link to=\"/new-movies\">NUEVAS</Link>\r\n                            <Link to=\"/best-movies\">POPULARES</Link>\r\n                            <Link to=\"/my-movies\">FAVORITAS</Link>\r\n                            <Link to=\"/search\">BUSCAR</Link>\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Carousel.scss';\r\nimport {Button, Col, Row, Carousel, Spinner} from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst CarouselMovies = (props) => {\r\n    const {movies} = props;\r\n    if(movies.loading || !movies.result){\r\n        return <Spinner animation=\"grow\" />;\r\n    }\r\n\r\n    const { results } = movies.result;\r\n\r\n    return (\r\n        <Col className=\"p-0 m-0\">\r\n            <Row className=\"p-0 m-0\">\r\n                <Col className=\"d-flex justify-content-center p-0 m-0\">\r\n                    <Carousel  className=\"carousel-movies p-0 m-0\">\r\n                        {results.map(movie => (\r\n                            <Carousel.Item className=\"p-0 m-0\" key={movie.id}>\r\n                                <Movie  movie={movie}/>\r\n                            </Carousel.Item>\r\n                        ))}\r\n                    </Carousel>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n};\r\n\r\nconst Movie =(props)=> {\r\n    const {\r\n        movie: {id, backdrop_path, title}\r\n    } = props;\r\n\r\n    const backdropPath = `http://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n    return (\r\n        <div>\r\n            <img style={{height:'100vh', width:'100vw'}}\r\n                 className=\"d-block\"\r\n                 src={`${backdropPath}`}\r\n                 alt=\"\"\r\n            />\r\n            <Carousel.Caption className=\"carousel-caption\">\r\n                <h1>\"{title}\"</h1>\r\n                <Link to={`/movie/${id}`}>\r\n                    <Button variant=\"outline-primary\">Ver más</Button>\r\n                </Link>\r\n            </Carousel.Caption>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default CarouselMovies;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url, options) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [result, setResult] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(()=> {\r\n        (async () => {\r\n            try {\r\n                const res = await fetch(url, options);\r\n                const json = await res.json();\r\n                setResult(json);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError(err);\r\n                setLoading(false);\r\n            }\r\n        })()\r\n    }, [options, url]);\r\n\r\n    return { loading, result, error };\r\n\r\n};\r\n\r\nexport default useFetch;\r\n","export const URL_API = 'https://api.themoviedb.org/3';\r\nexport const API = 'e53450e12e78df6daf5343b1f36bc74f';\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n   return (\r\n      <Row className=\"row-footer\">\r\n          <Col className=\"c-footer d-flex justify-content-center align-items-center\">\r\n              <p>Movies App    |   Copyright  © 2019 </p>\r\n          </Col>\r\n      </Row>\r\n   )\r\n\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Row, Col,Container } from \"react-bootstrap\";\r\nimport CarouselMovies from \"../components/Carousel/Carousel\";\r\nimport useFetch from \"../hooks/fetch\";\r\nimport { URL_API, API } from \"../utils/constants\";\r\nimport Footer from \"../components/Footer/Footer\"\r\n\r\n\r\nconst Home = () => {\r\n    const newMovies = useFetch(`${URL_API}/movie/now_playing?api_key=${API}&language=es-MX&page=1`);\r\n\r\n    return (\r\n        <Container fluid={true} className=\"p-0 m-0\">\r\n            <Row className=\"p-0 m-0\">\r\n                <Col className=\"p-0 m-0\">\r\n                    <CarouselMovies movies={newMovies} className=\"p-0 m-0\" />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"row-footer\">\r\n                <Footer/>\r\n            </Row>\r\n\r\n        </Container>\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './MovieCatalog.scss';\r\nimport {Col, Card} from \"react-bootstrap\";\r\n\r\n\r\nconst MovieCatalog =(props) => {\r\n\r\n    const {\r\n        movies: {results}\r\n    } = props;\r\n\r\n    return results.map ( movie => (\r\n        <Col key={movie.id}>\r\n            <MovieCard movie={movie}>\r\n            </MovieCard>\r\n        </Col>\r\n\r\n\r\n    ));\r\n\r\n};\r\n\r\nconst MovieCard =(props) => {\r\n    const { movie: {id, title, poster_path, overview} } = props;\r\n    const posterPath =`http://image.tmdb.org/t/p/original${poster_path}`;\r\n\r\n    return (\r\n        <Link to={`/movie/${id}`}>\r\n         <Card\r\n         className=\"movie-card\">\r\n                <Card.Img variant=\"top\" src={posterPath} />\r\n                <Card.Body>\r\n                    <Card.Title>{title}</Card.Title>\r\n                    <Card.Text>\r\n                        {overview}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n         </Card>\r\n\r\n        </Link>\r\n    )\r\n};\r\n\r\nexport default MovieCatalog;\r\n","import React from \"react\";\r\nimport Pagination from 'rc-pagination'\r\nimport './Pagination.scss';\r\n\r\nconst PaginationMovies =(props)=> {\r\n    const { currentPage, totalItems, onChangePage }= props;\r\n    return (\r\n        <Pagination\r\n            className=\"pagination\"\r\n            current = {currentPage}\r\n            total={totalItems}\r\n            pageSize ={20}\r\n            onChange={onChangePage}\r\n        />\r\n    )\r\n};\r\n\r\nexport default PaginationMovies;\r\n","import React, {useState, useEffect } from \"react\";\r\nimport {Row, Col, CardColumns, Spinner } from \"react-bootstrap\";\r\nimport { URL_API, API } from \"../utils/constants\";\r\nimport MovieCatalog from \"../components/MovieCatalog\";\r\nimport Pagination from '../components/Pagination';\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst NewMovies = () => {\r\n\r\n    const[ movieList, setMovieList] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect( () => {\r\n        (async () => {\r\n            const response = await fetch(\r\n                `${URL_API}/movie/now_playing?api_key=${API}&language=es-MX&page=${page}`\r\n            );\r\n\r\n            const movies = await response.json();\r\n            setMovieList(movies);\r\n        })();\r\n    },[page]);\r\n\r\n    const onChangePage = page => (\r\n        setPage(page)\r\n    );\r\n\r\n    return (\r\n        <Row >\r\n            <Row className=\"w-100\">\r\n                <Col className=\"d-flex justify-content-center\">\r\n                    <h1 className=\"text-center mb-5 h1\" style= {{ marginTop: '10%'}}>\r\n                        ÚLTIMOS ESTRENOS\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            <CardColumns style={{width:'100vw', padding:'0 10%'}}>\r\n                {movieList.results ? (\r\n                    <MovieCatalog movies={movieList}/>\r\n                ) : (\r\n                    <Col>\r\n                        <Spinner animation=\"grow\" />\r\n                    </Col>\r\n                )}\r\n\r\n            </CardColumns>\r\n            <Row className=\"w-100 p-2\">\r\n                <Col className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        currentPage={movieList.page}\r\n                        totalItems={movieList.total_results}\r\n                        onChangePage={onChangePage}/>\r\n                </Col>\r\n            </Row>\r\n            <Footer/>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default NewMovies;\r\n","import React, {useState, useEffect } from \"react\";\r\nimport {Row, Col, CardColumns, Spinner } from \"react-bootstrap\";\r\nimport { URL_API, API } from \"../utils/constants\";\r\nimport MovieCatalog from \"../components/MovieCatalog\";\r\nimport Pagination from '../components/Pagination';\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst BestMovies = () => {\r\n    const[ movieList, setMovieList] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect( () => {\r\n        (async () => {\r\n            const response = await fetch(\r\n                `${URL_API}/movie/popular?api_key=${API}&language=es-MX&page=${page}`\r\n            );\r\n\r\n            const movies = await response.json();\r\n            setMovieList(movies);\r\n        })();\r\n    },[page]);\r\n\r\n    const onChangePage = page => (\r\n        setPage(page)\r\n    );\r\n\r\n    return (\r\n        <Row >\r\n            <Row className=\"w-100\">\r\n                <Col className=\"d-flex justify-content-center\">\r\n                    <h1 className=\"text-center mb-5 h1\" style= {{ marginTop: '10%'}}>\r\n                        PELÍCULAS POPULARES\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            <CardColumns style={{width:'100vw', padding:'0 10%'}}>\r\n                {movieList.results ? (\r\n                    <MovieCatalog movies={movieList}/>\r\n                ) : (\r\n                    <Col className=\"d-flex justify-content-center\">\r\n                        <Spinner animation=\"grow\" />\r\n                    </Col>\r\n                )}\r\n            </CardColumns>\r\n            <Row className=\"w-100 p-2\">\r\n                <Col className=\"d-flex justify-content-center\">\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        currentPage={movieList.page}\r\n                        totalItems={movieList.total_results}\r\n                        onChangePage={onChangePage}/>\r\n                </Col>\r\n            </Row>\r\n            <Footer/>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default BestMovies;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Search.scss';\r\nimport MovieCatalog from \"../../components/MovieCatalog\";\r\nimport {URL_API, API} from \"../../utils/constants\";\r\nimport queryString from \"querystring\";\r\nimport {Row, Col, Button, CardColumns, InputGroup, FormControl} from \"react-bootstrap\";\r\n\r\nconst Search=(props) => {\r\n    const {location, history } = props;\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    useEffect(()=> {\r\n        (async () => {\r\n\r\n            const searchValue = queryString.parse(location.search);\r\n            const  s  = searchValue['?s'];\r\n            const response = await fetch(\r\n                `${URL_API}/search/movie?api_key=${API}&language=es-MX&query=${s}&page=1`\r\n            );\r\n            const movies = await response.json();\r\n            setSearchValue(s);\r\n            setMovieList(movies);\r\n        })();\r\n\r\n    }, [location.search]);\r\n\r\n    const onChangeSearch = e => {\r\n        let urlParams = queryString.parse(location.search);\r\n        urlParams['s'] = e.target.value;\r\n        delete urlParams['?s'];\r\n        history.push(`?${decodeURIComponent(queryString.stringify(urlParams)).replace('?','')}`);\r\n        setSearchValue(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col className=\"Search\" style={{ paddingTop:'8%'}}>\r\n                <h1 className=\"mb-3 mt-4 h1 text-center\">BUSCADOR DE PELÍCULAS</h1>\r\n                <Row>\r\n                    <Col className=\"d-flex justify-content-center\">\r\n                        <InputGroup className=\"Search-input mb-3 mt-4 w-75\" size=\"lg\">\r\n                            <FormControl onChange={onChangeSearch} value={searchValue}\r\n                                         placeholder=\"Ingresa una palabra clave...\"\r\n                                         aria-label=\"Recipient's username\"\r\n                                         aria-describedby=\"basic-addon2\"\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"outline-secondary\"><img src=\"../../assets/img/lupa.png\" alt=\"\"/></Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <CardColumns style={{padding:'3% 10%'}} >\r\n                    {movieList.results && (\r\n                        <MovieCatalog movies={movieList}/>\r\n                    )}\r\n                </CardColumns>\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default withRouter(Search);\r\n","import counterActions from './counterActions'\r\n\r\nconst allActions = {\r\n    counterActions,\r\n\r\n};\r\n\r\nexport default allActions\r\n","\r\n// Function to add a item\r\nconst addMovie = (data) => {\r\n    return {\r\n        type: \"ADD_MOVIE\",\r\n        data: data\r\n    }\r\n};\r\n\r\n// Function to delete a item\r\nconst deleteMovie = (name) => {\r\n    return {\r\n        type: \"DELETE_MOVIE\",\r\n        data: name\r\n    }\r\n};\r\n\r\nexport default {\r\n    addMovie,\r\n    deleteMovie\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {Row, Col, Button, Spinner} from \"react-bootstrap\";\r\nimport { useParams } from 'react-router-dom';\r\nimport useFetch from '../../hooks/fetch'\r\nimport { URL_API, API } from \"../../utils/constants\";\r\nimport './movie.scss';\r\nimport allActions from \"../../actions\";\r\nimport { useDispatch} from 'react-redux'\r\n\r\n\r\nconst Movie = () => {\r\n\r\n    const {id} = useParams();\r\n    const movieInfo = useFetch(\r\n        `${URL_API}/movie/${id}?api_key=${API}&language=es-MX`\r\n    );\r\n\r\n\r\n    if(movieInfo.loading || !movieInfo.result){\r\n        return <Spinner animation=\"grow\" />;\r\n    }\r\n\r\n    return <RenderMovie movieInfo={movieInfo.result}/>;\r\n};\r\n\r\nconst RenderMovie =(props)=> {\r\n    const {\r\n        movieInfo: { backdrop_path, poster_path}\r\n    } = props;\r\n\r\n    const backdropPath =`http://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n\r\n    return (\r\n        <Row className=\"movie\" style={{backgroundImage: `url('${backdropPath}')`, height:'100vh'}}>\r\n            <div className=\"movie_dark\" style={{ paddingTop:'8%'}}>\r\n                <Row className=\"row-poster\">\r\n                    <Col md={{ span:5}}  className=\"movie_poster\">\r\n                        <PosterMovie image={poster_path}/>\r\n                    </Col>\r\n                    <Col md={{ span:6}} className=\"movie_info mr-3\" >\r\n                        <MovieInfo movieInfo={props.movieInfo}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n        </Row>\r\n    )\r\n\r\n};\r\n\r\nconst PosterMovie=(props)=> {\r\n    const { image } = props;\r\n    const posterPath= `http://image.tmdb.org/t/p/original${image}`;\r\n    return <div style={{backgroundImage: `url('${posterPath}')`}}/>;\r\n};\r\n\r\nconst MovieInfo =(props)=> {\r\n    const { movieInfo: { release_date, overview, genres, title,vote_average, original_language, runtime, revenue, budget} }= props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    return (\r\n        <Row className=\"movie_info-header\" >\r\n            <Row className=\"mt-5\">\r\n                <Col>\r\n                    <h1 className=\"mt-5\">\r\n                        {title}{\" \"}{\" \"}\r\n                        <Button variant=\"outline-warning\" onClick={() => dispatch(allActions.counterActions.addMovie({\"title\":title}))}>Agregar a Favoritas</Button>\r\n                    </h1>\r\n                    <span>{release_date}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <div className=\"movie_info-content\">\r\n                        <p>Calificación: {vote_average}    | Duración: {runtime} min.  |  Idioma de origen: {original_language} </p>\r\n                        <p>Presupuesto: ${budget}    | Recaudación: ${revenue}</p>\r\n                        <h3>Sipnosis: </h3>\r\n                        <p>{overview}</p>\r\n                        <h3>Generos</h3>\r\n                        <ul>{genres.map(genre =>\r\n                            <li key={genre.id}>{genre.name}</li>\r\n                        )}\r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport {useSelector, useDispatch,} from 'react-redux';\r\nimport allActions from '../actions';\r\nimport { getStateLocalStorage } from \"../utils/localStorage\";\r\nimport { Row, Col, Card, Button, Spinner } from \"react-bootstrap\";\r\n\r\n// Component to list favorite movies\r\nconst MisMovies = () => {\r\n    const dispatch = useDispatch();\r\n    const counter = useSelector(state => state.counter);\r\n    let fromStorage = getStateLocalStorage(counter);\r\n\r\n    return (\r\n        <Row>\r\n            <Col className=\"App text-center\">\r\n                <h1 className=\"text-center mb-5 h1\" style= {{ marginTop: '10%'}}>\r\n                    TUS PELÍCULAS FAVORITAS\r\n                </h1>\r\n                <Col>\r\n                    {(fromStorage.length> 0) ? fromStorage.map( (movie) => (\r\n                        <Card bg=\"dark\" text=\"white\" style= {{ width: '50%', marginLeft:\"24%\" }}  className=\"mb-2\"  movie={movie}>\r\n                            <Card.Header className=\"text-justify d-flex justify-content-between\">\r\n                                {movie.title}\r\n                                <Button variant=\"outline-warning\"  onClick={() => dispatch(allActions.counterActions.deleteMovie(movie.title))}>x</Button>\r\n                            </Card.Header>\r\n                        </Card>\r\n                    )):(\r\n                        <Col>\r\n                            <Spinner animation=\"grow\" />\r\n                        </Col>\r\n                    )}\r\n                </Col>\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default MisMovies;\r\n\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <Col className=\"d-flex justify-content-center align-items-center\" style={{width:'100vw', height:'100vh', padding:'0'}}>\r\n            <img src=\"https://image.freepik.com/vector-gratis/concepto-landing-page-fallo-tecnico_23-2148235658.jpg\" alt=\"\"/>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default Error404;\r\n\r\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Provider } from 'react-redux'\n\n// Store\nimport store from \"./store\";\n\n\n// Router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Components\nimport NavBar from \"./components/Navbar\";\n\n//Pages\n\nimport Home from \"./pages/home\";\nimport NewMovies from \"./pages/new-movies\";\nimport BestMovies from \"./pages/best-movies\";\nimport Search from \"./pages/Search\";\nimport Movie from \"./pages/movie/movie\";\nimport MisMovies from \"./pages/my-movies\";\nimport Error404 from \"./pages/error404\";\n\n\n\nconst App = () => {\n\n    // let store = createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() );\n    return (\n\n        <Provider store={store}>\n            <Container  fluid={true} >\n                <Router>\n                    <Row>\n                        <Col className=\"m-0 p-0\">\n                            <NavBar/>\n                        </Col>\n\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Switch>\n                                <Route path=\"/\" exact={true}>\n                                    <Home/>\n                                </Route>\n\n                                <Route path=\"/new-movies\" exact={true}>\n                                    <NewMovies/>\n                                </Route>\n\n                                <Route path=\"/best-movies\" exact={true}>\n                                    <BestMovies/>\n                                </Route>\n\n                                <Route path=\"/movie/:id\" exact={true}>\n                                    <Movie/>\n                                </Route>\n\n                                <Route path=\"/search\" exact={true}>\n                                    <Search/>\n                                </Route>\n\n                                <Route path=\"/my-movies\" exact={true}>\n                                    <MisMovies/>\n                                </Route>\n\n                                <Route path=\"*\">\n                                    <Error404/>\n                                </Route>\n                            </Switch>\n                        </Col>\n                    </Row>\n                </Router>\n            </Container>\n        </Provider>\n    );\n};\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'rc-pagination/assets/index.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}